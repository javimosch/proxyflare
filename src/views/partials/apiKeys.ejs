<div class="bg-white p-6 rounded shadow-md mt-8">
    <h2 class="text-2xl font-bold mb-4">Manage API Keys</h2>
    <form id="apiKeyForm" class="mb-4">
      <div class="mb-4">
        <label for="description" class="block text-gray-700">Description</label>
        <input type="text" id="description" name="description" class="w-full px-3 py-2 border rounded" required />
      </div>
      <input type="hidden" id="keyId" name="keyId" />
      <button type="submit" id="generateButton" class="bg-blue-500 text-white px-4 py-2 rounded">Generate API Key</button>
    </form>
    <table class="w-full table-auto">
      <thead>
        <tr>
          <th class="text-left px-4 py-2">API Key</th>
          <th class="text-left px-4 py-2">Description</th>
          <th class="text-left px-4 py-2">Actions</th>
        </tr>
      </thead>
      <tbody id="apiKeysTable">
        <!-- API keys will be populated here -->
      </tbody>
    </table>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const apiKeyForm = document.getElementById('apiKeyForm');
      const apiKeysTable = document.getElementById('apiKeysTable');
      const generateButton = document.getElementById('generateButton');
      const descriptionInput = document.getElementById('description');
      const keyIdInput = document.getElementById('keyId');
  
      async function fetchApiKeys() {
        const response = await fetch('/api/internal/api-keys');
        const apiKeys = await response.json();
        apiKeysTable.innerHTML = apiKeys.map(apiKey => `
          <tr>
            <td class="px-4 py-2">${apiKey.key}</td>
            <td class="px-4 py-2">${apiKey.description}</td>
            <td class="px-4 py-2">
              <button class="bg-yellow-500 text-white px-4 py-2 rounded mr-2" onclick="editApiKey('${apiKey._id}', '${apiKey.description}')">Edit</button>
              <button class="bg-red-500 text-white px-4 py-2 rounded" onclick="deleteApiKey('${apiKey._id}')">Delete</button>
            </td>
          </tr>
        `).join('');
      }
  
      async function deleteApiKey(id) {
        await fetch(`/api/internal/api-key/${id}`, { method: 'DELETE' });
        fetchApiKeys();
      }
      window.deleteApiKey=deleteApiKey
  
      window.editApiKey = function(id, description) {
        keyIdInput.value = id;
        descriptionInput.value = description;
        generateButton.textContent = 'Re-generate API Key';
      }
  
      apiKeyForm.addEventListener('submit', async function (e) {
        e.preventDefault();
        const formData = new FormData(apiKeyForm);
        const data = Object.fromEntries(formData.entries());
        
        const url = data.keyId ? `/api/internal/api-key/${data.keyId}` : '/api/internal/api-key';
        const method = data.keyId ? 'PUT' : 'POST';
  
        const response = await fetch(url, {
          method: method,
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ description: data.description }),
        });
  
        if (response.ok) {
          const result = await response.json();
          alert(`API Key generated: ${result.key}`);
          apiKeyForm.reset();
          generateButton.textContent = 'Generate API Key';
          fetchApiKeys();
        } else {
          alert('Failed to generate API Key');
        }
      });
  
      fetchApiKeys();
    });
  </script>
  